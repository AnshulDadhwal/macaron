/* Copyright (c) 2023 - 2023, Oracle and/or its affiliates. All rights reserved. */
/* Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl/. */


/* aggregate verifying a level */
.decl aggregate_level(level: number, repo: number)
.decl aggregate_level_requirement(level: number, repo: number)

.decl agg_levels(n: number)
agg_levels(0).
agg_levels(n+1) :- n <= 4, agg_levels(n).

/**
 * Everything has a repository and uses a scripted build service.
 */
aggregate_level_requirement(1, repo) :-
    repository(repo, _,_,_,_,_,_),
    check_passed(repo, "mcn_build_service_1"),
    check_passed(repo, "mcn_version_control_system_1").


/**
  * The build is verifiably automated and .
  */
aggregate_level_requirement(2, repo) :-
    repository(repo, _,_,_,_,_,_),
    check_passed(repo, "mcn_build_script_1"),
    check_passed(repo, "mcn_build_service_1"),
    check_passed(repo, "mcn_build_as_code_1").


// The minimum aggregate level a reposotories dependencies have
.decl aggregate_level_min_dependency_level(level: number, dep_level:number)
aggregate_level_min_dependency_level(1, 1).
aggregate_level_min_dependency_level(2, 2).
aggregate_level_min_dependency_level(3, 2).
aggregate_level_min_dependency_level(4, 4).


/**
 *  The repository uses a trusted build service that outputs verifiable
 *   provenance information.
 */
aggregate_level_requirement(3, repo) :-
    repository(repo, _,_,_,_,_,_),
    check_passed(repo, "mcn_provenance_level_three_1"),
    aggregate_level_requirement(2, repo),
    aggregate_level_requirement(1, repo).


/**
 *   The release provenance verifies
 */
aggregate_level_requirement(4, repo) :-
    repository(repo, _,_,_,_,_,_),
    check_passed(repo, "mcn_provenance_level_three_1"),
    check_passed(repo, "mcn_trusted_builder_level_three_1"),
    check_passed(repo, "mcn_policy_check_1"),
    not_self_hosted_git(repo, _).
